
1. rails g model Pic title:string description:text

change routes.rb
                            Rails.application.routes.draw do
                              resources :pics
                              root "pics#index"
                            end


create controllers... rails g controllers Pics
invoke  pics_controller.rb

                                    class PicsController < ApplicationController

                                      def index
                                      end

                                      def new
                                        @pic = Pic.new
                                      end

                                      def create
                                        @pic = Pic.new(pic_params)
                                      end

                                      private

                                      def pic_params
                                        params.require(:pic).permit(:title, :description)
                                      end
                                    end
create pics/new.html.erb
                              <h1> Post Picture </h2>

                                <%= render 'form' %>
                                <%= link_to "Back", root_path %>

Install simple_form gem
gem 'simple_form'
gem 'bootstrap-sass', '~> 3.3', '>= 3.3.7'

$rails generate simple_form:install --bootstrap




create pics/_form.html.erb
                              <%= simple_form_for @pic, html: { multipart: true } do |f| %>
                                <% if @pic.errors.any? %>
                                  <div id="errors">
                                    <h2></h2>
                                    <%= pluralize(@pic.errors.count, "error") %>
                                    <!-- prevented this Pic from saving-->
                                    <ul>
                                      <% @pic.errors.full_messages.each do |msg| %>
                                        <li>
                                          <%= msg %>
                                        </li>
                                      <% end %>
                                    </ul>
                                  </div>
                                <% end %>

                                <div class="form-group">
                                  <%= f.input :title, input_html: { class: 'form-control' } %>
                                </div>
                                <div class="form-group">
                                  <%= f.input :description, input_html: { class: 'form-control' } %>
                                </div>
                                <%= f.button :submit, class: "btn btn-info" %>
                              <% end %>


  2. Displaying Post

  modify PicsController

                                    class PicsController < ApplicationController
                                      before_action :find_pic, only: [:show, :edit, :update, :destroy]

                                      def index
                                      end

                                      def show
                                      end

                                      def new
                                        @pic = Pic.new
                                      end

                                      def create
                                        @pic = Pic.new(pic_params)
                                        if @pic.save
                                          redirect_to @pic, notice: "Yessss, it was posted"
                                        else
                                          render 'new'
                                        end
                                      end

                                      private

                                      def find_pic
                                        @pic = Pic.find(params[:id])
                                      end

                                      def pic_params
                                        params.require(:pic).permit(:title, :description)
                                      end
                                    end


add this line inside <body> in application.html.erb

                                        <% flash.each do |name, msg|  %>
                                          <%= content_tag :div, msg, class: "alert-info" %>
                                        <% end %>
                                        <%= yield %>
create show.html.erb

                                        <h1><%= @pic.title  %></h1>
                                        <p><%= @pic.description  %></p>

                                        <%= link_to "Back", root_path %>

create index.html.erb

                                    <% @pics.each do |pic|  %>
                                    <h2><%= link_to pic.title, pic %></h2>

3.

modify PicsController

                                class PicsController < ApplicationController
                                  before_action :find_pic, only: [:show, :edit, :update, :destroy]

                                  def index
                                    @pics = Pic.all.order("created_at DESC")
                                  end

                                  def show
                                  end

                                  def new
                                    @pic = Pic.new
                                  end

                                  def create
                                    @pic = Pic.new(pic_params)
                                    if @pic.save
                                      redirect_to @pic, notice: "Yessss, it was posted"
                                    else
                                      render 'new'
                                    end
                                  end

                                  def edit
                                  end

                                  def update
                                    if @pic.update(pic_params)
                                      redirect_to @pic, notice: "Congrats! Picture was updated"
                                    else
                                      render 'edit'
                                    end
                                  end

                                  def destroy
                                    params.require(:pic).permit(:title, :description)
                                  end


                                  private

                                  def find_pic
                                    @pic = Pic.find(params[:id])

                                  end

                                  def pic_params
                                    params.require(:pic).permit(:title, :description)
                                  end
                                end

    create an edit.html.erb

                                  <h1> Fix Pic </h1>

                                  <%= render 'form' %>
                                    <%= link_to "Cancel", pic_path %>

  modify show.html.erb

                            <h1><%= @pic.title  %></h1>
                            <p><%= @pic.description  %></p>

                            <%= link_to "Back", root_path %>
                            <%= link_to "Edit", edit_pic_path %>
                            <%= link_to "Delete", pic_path, method: :delete, data: {confirm: "Are you sure?"} %>

modify index.html.erb

                          <% @pics.each do |pic|  %>
                          <h2><%= link_to pic.title, pic %></h2>
                          <%end%>

                          <%= link_to "Gram it" , new_pic_path %>

4.   install devise gem
                          rails generate devise:install  - follow the instruction in terminal



rails g migration add_user_id_to_pics user_id:integer:index

                        add at user.rb  => has_many :pics
                        add at pic.rb => belongs_to :user

modify pics_controller.rb  at

                              def new
                                @pic = current_user.pics.build
                              end

                              def create
                                @pic = current_user.pics.build (pic_params)
                                if @pic.save
                                  redirect_to @pic, notice: "Yessss, it was posted"
                                else
                                  render 'new'
                                end
                              end

5. added styling
    rename assets/stylsheets/application.css to application.scss


                            @import "bootstrap-sprockets";
                            @import "bootstrap";

                            body {
                             background: #E9E9E9;
                            }

                            h1, h2, h3, h4, h5, h6 {
                             font-weight: 100;
                             color: #529ECC;
                             font-weight: bold;
                             text-align: center;
                            }

                            nav {
                            	box-shadow: 0 1px 2px 0 rgba(82,158,204, 0.22);
                            	box-color: #529ECC;
                            	background: #529ECC;

                            	.navbar-brand {
                            		a {
                            			color: #529ECC;
                            			font-weight: bold;
                            			font-size: 1.6em;
                            			&:hover {
                            				text-decoration: none;
                            			}
                            		}
                            	}
                            }

  added tis line at application.js


                                //= require jquery
                                //= require bootstrap-sprockets

  new.html.erb

                                <div class="col-md-8 col-md-offset-2"></div>
                                <div class="row"></div>
                                <div class="panel panel-default"></div>
                                <div class="panel-heading"></div>

                                <h1> Post Picture </h2>
                                <div class="panel-body"></div>
                                  <%= render 'form' %>

edit.html.erb
                              <div class="col-md-8 col-md-offset-2" id="edit_page"></div>
                              <div class="row"></div>
                              <div class="panel panel-default"></div>
                              <div class="panel-heading"></div>
                              <h1>Fix Pic </h1>
                              <div class="panel-body"></div>
                              <%= render 'form' %>

6. Add Image

install imagemagick , gem 'paperclip'

add pic.rb (this get from paperclip github)

                              class Pic < ApplicationRecord
                                belongs_to :user
                                has_attached_file :image, styles: { medium: "300x300>", thumb: "100x100>" }
                                validates_attachment_content_type :image, content_type: /\Aimage\/.*\z/
                              end
run this in terminal :
                            rails g paperclip pic image  <=  NOTE

      it will create migration    => 20170617124526_add_attachment_image_to_pics.rb

IMPORTANT NOTE : IN PAPERCLIP GITHUB, THEY WILL USE AVATAR INSTEAD OF IMAGE...
has_attached_file :avatar, styles: { medium: "300x300>", thumb: "100x100>" }
validates_attachment_content_type :avatar, content_type: /\Aimage\/.*\z/
CAUSE WHEN U RUN MIGRATION => rails g paperclip pic image, U USED PIC=MODEL FILE, IMAGE = AVATAR...

added this line to _form.html.erb
                            <div class="form-group">
                              <%= f.input :image, input_html: { class: 'form-control' } %>
                            </div>

  modify index.html.erb

                              <% @pics.each do |pic|  %>
                              <%= link_to (image_tag pic.image.url(:medium)),pic %>

                              <h2><%= link_to pic.title, pic %></h2>
                              <%end%>

added this line at the top of show.html.erb
                            <%= link_to image_tag(@pic.image.url(:medium)), @pic.image.url %>

modify edit.html.erb

                              <div class="col-md-8 col-md-offset-2" id="edit_page"></div>
                              <div class="row"></div>
                              <div class="panel panel-default"></div>
                              <div class="panel-heading"></div>
                              <h1>Fix Pic </h1>
                              <div class="panel-body"></div>
                              <div class="current_image"></div>
                              <strong class="center">Right Now </strong>
                              <%= image_tag @pic.image.url(:medium) %>
                              <%= render 'form' %>

  modify pics_controller.rb

                  class PicsController < ApplicationController
                    before_action :find_pic, only: [:show, :edit, :update, :destroy]

                    def index
                      @pics = Pic.all.order("created_at DESC")
                    end

                    def show
                    end

                    def new
                      @pic = current_user.pics.build
                    end

                    def create
                      @pic = current_user.pics.build (pic_params)
                      if @pic.save
                        redirect_to @pic, notice: "Yessss, it was posted"
                      else
                        render 'new'
                      end
                    end

                    def edit
                    end

                    def update
                      if @pic.update(pic_params)
                        redirect_to @pic, notice: "Congrats! Picture was updated"
                      else
                        render 'edit'
                      end
                    end

                    def destroy
                      @pic.destroy          <= Change Here
                      redirect_to root_path
                    end


                    private

                    def find_pic
                      @pic = Pic.find(params[:id])

                    end

                    def pic_params
                      params.require(:pic).permit(:title, :description, :image)  <=Change here
                    end
                  end
